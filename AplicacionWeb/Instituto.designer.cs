#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AplicacionWeb
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="INSTITUTO_IDIOMAS")]
	public partial class InstitutoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertadministrativo(administrativo instance);
    partial void Updateadministrativo(administrativo instance);
    partial void Deleteadministrativo(administrativo instance);
    partial void Insertagendar_clase(agendar_clase instance);
    partial void Updateagendar_clase(agendar_clase instance);
    partial void Deleteagendar_clase(agendar_clase instance);
    partial void Insertasistencia(asistencia instance);
    partial void Updateasistencia(asistencia instance);
    partial void Deleteasistencia(asistencia instance);
    partial void Insertaulas(aulas instance);
    partial void Updateaulas(aulas instance);
    partial void Deleteaulas(aulas instance);
    partial void Insertcurso(curso instance);
    partial void Updatecurso(curso instance);
    partial void Deletecurso(curso instance);
    partial void Insertcurso_abierto(curso_abierto instance);
    partial void Updatecurso_abierto(curso_abierto instance);
    partial void Deletecurso_abierto(curso_abierto instance);
    partial void Insertestudiante(estudiante instance);
    partial void Updateestudiante(estudiante instance);
    partial void Deleteestudiante(estudiante instance);
    partial void Insertferiados(feriados instance);
    partial void Updateferiados(feriados instance);
    partial void Deleteferiados(feriados instance);
    partial void Insertmatricula(matricula instance);
    partial void Updatematricula(matricula instance);
    partial void Deletematricula(matricula instance);
    partial void Insertpagos(pagos instance);
    partial void Updatepagos(pagos instance);
    partial void Deletepagos(pagos instance);
    partial void Insertprofesor(profesor instance);
    partial void Updateprofesor(profesor instance);
    partial void Deleteprofesor(profesor instance);
    partial void Insertprograma(programa instance);
    partial void Updateprograma(programa instance);
    partial void Deleteprograma(programa instance);
    partial void Insertregistro_pagos(registro_pagos instance);
    partial void Updateregistro_pagos(registro_pagos instance);
    partial void Deleteregistro_pagos(registro_pagos instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    #endregion
		
		public InstitutoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["INSTITUTO_IDIOMASConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public InstitutoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstitutoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstitutoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstitutoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<administrativo> administrativo
		{
			get
			{
				return this.GetTable<administrativo>();
			}
		}
		
		public System.Data.Linq.Table<agendar_clase> agendar_clase
		{
			get
			{
				return this.GetTable<agendar_clase>();
			}
		}
		
		public System.Data.Linq.Table<asistencia> asistencia
		{
			get
			{
				return this.GetTable<asistencia>();
			}
		}
		
		public System.Data.Linq.Table<aulas> aulas
		{
			get
			{
				return this.GetTable<aulas>();
			}
		}
		
		public System.Data.Linq.Table<curso> curso
		{
			get
			{
				return this.GetTable<curso>();
			}
		}
		
		public System.Data.Linq.Table<curso_abierto> curso_abierto
		{
			get
			{
				return this.GetTable<curso_abierto>();
			}
		}
		
		public System.Data.Linq.Table<estudiante> estudiante
		{
			get
			{
				return this.GetTable<estudiante>();
			}
		}
		
		public System.Data.Linq.Table<feriados> feriados
		{
			get
			{
				return this.GetTable<feriados>();
			}
		}
		
		public System.Data.Linq.Table<matricula> matricula
		{
			get
			{
				return this.GetTable<matricula>();
			}
		}
		
		public System.Data.Linq.Table<pagos> pagos
		{
			get
			{
				return this.GetTable<pagos>();
			}
		}
		
		public System.Data.Linq.Table<profesor> profesor
		{
			get
			{
				return this.GetTable<profesor>();
			}
		}
		
		public System.Data.Linq.Table<programa> programa
		{
			get
			{
				return this.GetTable<programa>();
			}
		}
		
		public System.Data.Linq.Table<registro_pagos> registro_pagos
		{
			get
			{
				return this.GetTable<registro_pagos>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.administrativo")]
	public partial class administrativo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_admin;
		
		private int _id_programa;
		
		private string _nombre;
		
		private string _correo;
		
		private string _direccion;
		
		private int _telefono;
		
		private string _cargo;
		
		private string _departamento;
		
		private EntityRef<programa> _programa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_adminChanging(int value);
    partial void Onid_adminChanged();
    partial void Onid_programaChanging(int value);
    partial void Onid_programaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(int value);
    partial void OntelefonoChanged();
    partial void OncargoChanging(string value);
    partial void OncargoChanged();
    partial void OndepartamentoChanging(string value);
    partial void OndepartamentoChanged();
    #endregion
		
		public administrativo()
		{
			this._programa = default(EntityRef<programa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_admin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_admin
		{
			get
			{
				return this._id_admin;
			}
			set
			{
				if ((this._id_admin != value))
				{
					this.Onid_adminChanging(value);
					this.SendPropertyChanging();
					this._id_admin = value;
					this.SendPropertyChanged("id_admin");
					this.Onid_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_programa", DbType="Int NOT NULL")]
		public int id_programa
		{
			get
			{
				return this._id_programa;
			}
			set
			{
				if ((this._id_programa != value))
				{
					if (this._programa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_programaChanging(value);
					this.SendPropertyChanging();
					this._id_programa = value;
					this.SendPropertyChanged("id_programa");
					this.Onid_programaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Int NOT NULL")]
		public int telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cargo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cargo
		{
			get
			{
				return this._cargo;
			}
			set
			{
				if ((this._cargo != value))
				{
					this.OncargoChanging(value);
					this.SendPropertyChanging();
					this._cargo = value;
					this.SendPropertyChanged("cargo");
					this.OncargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departamento", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string departamento
		{
			get
			{
				return this._departamento;
			}
			set
			{
				if ((this._departamento != value))
				{
					this.OndepartamentoChanging(value);
					this.SendPropertyChanging();
					this._departamento = value;
					this.SendPropertyChanged("departamento");
					this.OndepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="programa_administrativo", Storage="_programa", ThisKey="id_programa", OtherKey="id_programa", IsForeignKey=true)]
		public programa programa
		{
			get
			{
				return this._programa.Entity;
			}
			set
			{
				programa previousValue = this._programa.Entity;
				if (((previousValue != value) 
							|| (this._programa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._programa.Entity = null;
						previousValue.administrativo.Remove(this);
					}
					this._programa.Entity = value;
					if ((value != null))
					{
						value.administrativo.Add(this);
						this._id_programa = value.id_programa;
					}
					else
					{
						this._id_programa = default(int);
					}
					this.SendPropertyChanged("programa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.agendar_clase")]
	public partial class agendar_clase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_agenda;
		
		private int _id_estudiante;
		
		private int _id_curso_abierto;
		
		private int _id_profesor;
		
		private System.DateTime _fecha_leccion;
		
		private int _hora;
		
		private EntityRef<curso_abierto> _curso_abierto;
		
		private EntityRef<estudiante> _estudiante;
		
		private EntityRef<profesor> _profesor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_agendaChanging(int value);
    partial void Onid_agendaChanged();
    partial void Onid_estudianteChanging(int value);
    partial void Onid_estudianteChanged();
    partial void Onid_curso_abiertoChanging(int value);
    partial void Onid_curso_abiertoChanged();
    partial void Onid_profesorChanging(int value);
    partial void Onid_profesorChanged();
    partial void Onfecha_leccionChanging(System.DateTime value);
    partial void Onfecha_leccionChanged();
    partial void OnhoraChanging(int value);
    partial void OnhoraChanged();
    #endregion
		
		public agendar_clase()
		{
			this._curso_abierto = default(EntityRef<curso_abierto>);
			this._estudiante = default(EntityRef<estudiante>);
			this._profesor = default(EntityRef<profesor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_agenda", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_agenda
		{
			get
			{
				return this._id_agenda;
			}
			set
			{
				if ((this._id_agenda != value))
				{
					this.Onid_agendaChanging(value);
					this.SendPropertyChanging();
					this._id_agenda = value;
					this.SendPropertyChanged("id_agenda");
					this.Onid_agendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estudiante", DbType="Int NOT NULL")]
		public int id_estudiante
		{
			get
			{
				return this._id_estudiante;
			}
			set
			{
				if ((this._id_estudiante != value))
				{
					if (this._estudiante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estudianteChanging(value);
					this.SendPropertyChanging();
					this._id_estudiante = value;
					this.SendPropertyChanged("id_estudiante");
					this.Onid_estudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_curso_abierto", DbType="Int NOT NULL")]
		public int id_curso_abierto
		{
			get
			{
				return this._id_curso_abierto;
			}
			set
			{
				if ((this._id_curso_abierto != value))
				{
					if (this._curso_abierto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_curso_abiertoChanging(value);
					this.SendPropertyChanging();
					this._id_curso_abierto = value;
					this.SendPropertyChanged("id_curso_abierto");
					this.Onid_curso_abiertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_profesor", DbType="Int NOT NULL")]
		public int id_profesor
		{
			get
			{
				return this._id_profesor;
			}
			set
			{
				if ((this._id_profesor != value))
				{
					if (this._profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_profesorChanging(value);
					this.SendPropertyChanging();
					this._id_profesor = value;
					this.SendPropertyChanged("id_profesor");
					this.Onid_profesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_leccion", DbType="Date NOT NULL")]
		public System.DateTime fecha_leccion
		{
			get
			{
				return this._fecha_leccion;
			}
			set
			{
				if ((this._fecha_leccion != value))
				{
					this.Onfecha_leccionChanging(value);
					this.SendPropertyChanging();
					this._fecha_leccion = value;
					this.SendPropertyChanged("fecha_leccion");
					this.Onfecha_leccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora", DbType="Int NOT NULL")]
		public int hora
		{
			get
			{
				return this._hora;
			}
			set
			{
				if ((this._hora != value))
				{
					this.OnhoraChanging(value);
					this.SendPropertyChanging();
					this._hora = value;
					this.SendPropertyChanged("hora");
					this.OnhoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_abierto_agendar_clase", Storage="_curso_abierto", ThisKey="id_curso_abierto", OtherKey="id_curso_abierto", IsForeignKey=true)]
		public curso_abierto curso_abierto
		{
			get
			{
				return this._curso_abierto.Entity;
			}
			set
			{
				curso_abierto previousValue = this._curso_abierto.Entity;
				if (((previousValue != value) 
							|| (this._curso_abierto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._curso_abierto.Entity = null;
						previousValue.agendar_clase.Remove(this);
					}
					this._curso_abierto.Entity = value;
					if ((value != null))
					{
						value.agendar_clase.Add(this);
						this._id_curso_abierto = value.id_curso_abierto;
					}
					else
					{
						this._id_curso_abierto = default(int);
					}
					this.SendPropertyChanged("curso_abierto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estudiante_agendar_clase", Storage="_estudiante", ThisKey="id_estudiante", OtherKey="id_estudiante", IsForeignKey=true)]
		public estudiante estudiante
		{
			get
			{
				return this._estudiante.Entity;
			}
			set
			{
				estudiante previousValue = this._estudiante.Entity;
				if (((previousValue != value) 
							|| (this._estudiante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estudiante.Entity = null;
						previousValue.agendar_clase.Remove(this);
					}
					this._estudiante.Entity = value;
					if ((value != null))
					{
						value.agendar_clase.Add(this);
						this._id_estudiante = value.id_estudiante;
					}
					else
					{
						this._id_estudiante = default(int);
					}
					this.SendPropertyChanged("estudiante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profesor_agendar_clase", Storage="_profesor", ThisKey="id_profesor", OtherKey="id_profesor", IsForeignKey=true)]
		public profesor profesor
		{
			get
			{
				return this._profesor.Entity;
			}
			set
			{
				profesor previousValue = this._profesor.Entity;
				if (((previousValue != value) 
							|| (this._profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._profesor.Entity = null;
						previousValue.agendar_clase.Remove(this);
					}
					this._profesor.Entity = value;
					if ((value != null))
					{
						value.agendar_clase.Add(this);
						this._id_profesor = value.id_profesor;
					}
					else
					{
						this._id_profesor = default(int);
					}
					this.SendPropertyChanged("profesor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.asistencia")]
	public partial class asistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_asistencia;
		
		private int _id_curso_abierto;
		
		private int _id_estudiante;
		
		private System.DateTime _fecha_asistencia;
		
		private bool _presente;
		
		private EntityRef<curso_abierto> _curso_abierto;
		
		private EntityRef<estudiante> _estudiante;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_asistenciaChanging(int value);
    partial void Onid_asistenciaChanged();
    partial void Onid_curso_abiertoChanging(int value);
    partial void Onid_curso_abiertoChanged();
    partial void Onid_estudianteChanging(int value);
    partial void Onid_estudianteChanged();
    partial void Onfecha_asistenciaChanging(System.DateTime value);
    partial void Onfecha_asistenciaChanged();
    partial void OnpresenteChanging(bool value);
    partial void OnpresenteChanged();
    #endregion
		
		public asistencia()
		{
			this._curso_abierto = default(EntityRef<curso_abierto>);
			this._estudiante = default(EntityRef<estudiante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_asistencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_asistencia
		{
			get
			{
				return this._id_asistencia;
			}
			set
			{
				if ((this._id_asistencia != value))
				{
					this.Onid_asistenciaChanging(value);
					this.SendPropertyChanging();
					this._id_asistencia = value;
					this.SendPropertyChanged("id_asistencia");
					this.Onid_asistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_curso_abierto", DbType="Int NOT NULL")]
		public int id_curso_abierto
		{
			get
			{
				return this._id_curso_abierto;
			}
			set
			{
				if ((this._id_curso_abierto != value))
				{
					if (this._curso_abierto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_curso_abiertoChanging(value);
					this.SendPropertyChanging();
					this._id_curso_abierto = value;
					this.SendPropertyChanged("id_curso_abierto");
					this.Onid_curso_abiertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estudiante", DbType="Int NOT NULL")]
		public int id_estudiante
		{
			get
			{
				return this._id_estudiante;
			}
			set
			{
				if ((this._id_estudiante != value))
				{
					if (this._estudiante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estudianteChanging(value);
					this.SendPropertyChanging();
					this._id_estudiante = value;
					this.SendPropertyChanged("id_estudiante");
					this.Onid_estudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_asistencia", DbType="Date NOT NULL")]
		public System.DateTime fecha_asistencia
		{
			get
			{
				return this._fecha_asistencia;
			}
			set
			{
				if ((this._fecha_asistencia != value))
				{
					this.Onfecha_asistenciaChanging(value);
					this.SendPropertyChanging();
					this._fecha_asistencia = value;
					this.SendPropertyChanged("fecha_asistencia");
					this.Onfecha_asistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presente", DbType="Bit NOT NULL")]
		public bool presente
		{
			get
			{
				return this._presente;
			}
			set
			{
				if ((this._presente != value))
				{
					this.OnpresenteChanging(value);
					this.SendPropertyChanging();
					this._presente = value;
					this.SendPropertyChanged("presente");
					this.OnpresenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_abierto_asistencia", Storage="_curso_abierto", ThisKey="id_curso_abierto", OtherKey="id_curso_abierto", IsForeignKey=true)]
		public curso_abierto curso_abierto
		{
			get
			{
				return this._curso_abierto.Entity;
			}
			set
			{
				curso_abierto previousValue = this._curso_abierto.Entity;
				if (((previousValue != value) 
							|| (this._curso_abierto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._curso_abierto.Entity = null;
						previousValue.asistencia.Remove(this);
					}
					this._curso_abierto.Entity = value;
					if ((value != null))
					{
						value.asistencia.Add(this);
						this._id_curso_abierto = value.id_curso_abierto;
					}
					else
					{
						this._id_curso_abierto = default(int);
					}
					this.SendPropertyChanged("curso_abierto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estudiante_asistencia", Storage="_estudiante", ThisKey="id_estudiante", OtherKey="id_estudiante", IsForeignKey=true)]
		public estudiante estudiante
		{
			get
			{
				return this._estudiante.Entity;
			}
			set
			{
				estudiante previousValue = this._estudiante.Entity;
				if (((previousValue != value) 
							|| (this._estudiante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estudiante.Entity = null;
						previousValue.asistencia.Remove(this);
					}
					this._estudiante.Entity = value;
					if ((value != null))
					{
						value.asistencia.Add(this);
						this._id_estudiante = value.id_estudiante;
					}
					else
					{
						this._id_estudiante = default(int);
					}
					this.SendPropertyChanged("estudiante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aulas")]
	public partial class aulas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_aula;
		
		private int _id_programa;
		
		private int _capacidad;
		
		private EntityRef<programa> _programa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_aulaChanging(string value);
    partial void Onid_aulaChanged();
    partial void Onid_programaChanging(int value);
    partial void Onid_programaChanged();
    partial void OncapacidadChanging(int value);
    partial void OncapacidadChanged();
    #endregion
		
		public aulas()
		{
			this._programa = default(EntityRef<programa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_aula", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_aula
		{
			get
			{
				return this._id_aula;
			}
			set
			{
				if ((this._id_aula != value))
				{
					this.Onid_aulaChanging(value);
					this.SendPropertyChanging();
					this._id_aula = value;
					this.SendPropertyChanged("id_aula");
					this.Onid_aulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_programa", DbType="Int NOT NULL")]
		public int id_programa
		{
			get
			{
				return this._id_programa;
			}
			set
			{
				if ((this._id_programa != value))
				{
					if (this._programa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_programaChanging(value);
					this.SendPropertyChanging();
					this._id_programa = value;
					this.SendPropertyChanged("id_programa");
					this.Onid_programaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacidad", DbType="Int NOT NULL")]
		public int capacidad
		{
			get
			{
				return this._capacidad;
			}
			set
			{
				if ((this._capacidad != value))
				{
					this.OncapacidadChanging(value);
					this.SendPropertyChanging();
					this._capacidad = value;
					this.SendPropertyChanged("capacidad");
					this.OncapacidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="programa_aulas", Storage="_programa", ThisKey="id_programa", OtherKey="id_programa", IsForeignKey=true)]
		public programa programa
		{
			get
			{
				return this._programa.Entity;
			}
			set
			{
				programa previousValue = this._programa.Entity;
				if (((previousValue != value) 
							|| (this._programa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._programa.Entity = null;
						previousValue.aulas.Remove(this);
					}
					this._programa.Entity = value;
					if ((value != null))
					{
						value.aulas.Add(this);
						this._id_programa = value.id_programa;
					}
					else
					{
						this._id_programa = default(int);
					}
					this.SendPropertyChanged("programa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.curso")]
	public partial class curso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_curso;
		
		private int _id_programa;
		
		private string _curso1;
		
		private int _precio;
		
		private int _total_horas;
		
		private EntitySet<curso_abierto> _curso_abierto;
		
		private EntityRef<programa> _programa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cursoChanging(int value);
    partial void Onid_cursoChanged();
    partial void Onid_programaChanging(int value);
    partial void Onid_programaChanged();
    partial void Oncurso1Changing(string value);
    partial void Oncurso1Changed();
    partial void OnprecioChanging(int value);
    partial void OnprecioChanged();
    partial void Ontotal_horasChanging(int value);
    partial void Ontotal_horasChanged();
    #endregion
		
		public curso()
		{
			this._curso_abierto = new EntitySet<curso_abierto>(new Action<curso_abierto>(this.attach_curso_abierto), new Action<curso_abierto>(this.detach_curso_abierto));
			this._programa = default(EntityRef<programa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_curso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_curso
		{
			get
			{
				return this._id_curso;
			}
			set
			{
				if ((this._id_curso != value))
				{
					this.Onid_cursoChanging(value);
					this.SendPropertyChanging();
					this._id_curso = value;
					this.SendPropertyChanged("id_curso");
					this.Onid_cursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_programa", DbType="Int NOT NULL")]
		public int id_programa
		{
			get
			{
				return this._id_programa;
			}
			set
			{
				if ((this._id_programa != value))
				{
					if (this._programa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_programaChanging(value);
					this.SendPropertyChanging();
					this._id_programa = value;
					this.SendPropertyChanged("id_programa");
					this.Onid_programaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="curso", Storage="_curso1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string curso1
		{
			get
			{
				return this._curso1;
			}
			set
			{
				if ((this._curso1 != value))
				{
					this.Oncurso1Changing(value);
					this.SendPropertyChanging();
					this._curso1 = value;
					this.SendPropertyChanged("curso1");
					this.Oncurso1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Int NOT NULL")]
		public int precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_horas", DbType="Int NOT NULL")]
		public int total_horas
		{
			get
			{
				return this._total_horas;
			}
			set
			{
				if ((this._total_horas != value))
				{
					this.Ontotal_horasChanging(value);
					this.SendPropertyChanging();
					this._total_horas = value;
					this.SendPropertyChanged("total_horas");
					this.Ontotal_horasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_curso_abierto", Storage="_curso_abierto", ThisKey="id_curso", OtherKey="id_curso")]
		public EntitySet<curso_abierto> curso_abierto
		{
			get
			{
				return this._curso_abierto;
			}
			set
			{
				this._curso_abierto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="programa_curso", Storage="_programa", ThisKey="id_programa", OtherKey="id_programa", IsForeignKey=true)]
		public programa programa
		{
			get
			{
				return this._programa.Entity;
			}
			set
			{
				programa previousValue = this._programa.Entity;
				if (((previousValue != value) 
							|| (this._programa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._programa.Entity = null;
						previousValue.curso.Remove(this);
					}
					this._programa.Entity = value;
					if ((value != null))
					{
						value.curso.Add(this);
						this._id_programa = value.id_programa;
					}
					else
					{
						this._id_programa = default(int);
					}
					this.SendPropertyChanged("programa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_curso_abierto(curso_abierto entity)
		{
			this.SendPropertyChanging();
			entity.curso = this;
		}
		
		private void detach_curso_abierto(curso_abierto entity)
		{
			this.SendPropertyChanging();
			entity.curso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.curso_abierto")]
	public partial class curso_abierto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_curso_abierto;
		
		private int _id_curso;
		
		private int _id_profesor;
		
		private int _hora_inicio;
		
		private int _hora_fin;
		
		private string _dia;
		
		private EntitySet<agendar_clase> _agendar_clase;
		
		private EntitySet<asistencia> _asistencia;
		
		private EntitySet<matricula> _matricula;
		
		private EntityRef<curso> _curso;
		
		private EntityRef<profesor> _profesor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_curso_abiertoChanging(int value);
    partial void Onid_curso_abiertoChanged();
    partial void Onid_cursoChanging(int value);
    partial void Onid_cursoChanged();
    partial void Onid_profesorChanging(int value);
    partial void Onid_profesorChanged();
    partial void Onhora_inicioChanging(int value);
    partial void Onhora_inicioChanged();
    partial void Onhora_finChanging(int value);
    partial void Onhora_finChanged();
    partial void OndiaChanging(string value);
    partial void OndiaChanged();
    #endregion
		
		public curso_abierto()
		{
			this._agendar_clase = new EntitySet<agendar_clase>(new Action<agendar_clase>(this.attach_agendar_clase), new Action<agendar_clase>(this.detach_agendar_clase));
			this._asistencia = new EntitySet<asistencia>(new Action<asistencia>(this.attach_asistencia), new Action<asistencia>(this.detach_asistencia));
			this._matricula = new EntitySet<matricula>(new Action<matricula>(this.attach_matricula), new Action<matricula>(this.detach_matricula));
			this._curso = default(EntityRef<curso>);
			this._profesor = default(EntityRef<profesor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_curso_abierto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_curso_abierto
		{
			get
			{
				return this._id_curso_abierto;
			}
			set
			{
				if ((this._id_curso_abierto != value))
				{
					this.Onid_curso_abiertoChanging(value);
					this.SendPropertyChanging();
					this._id_curso_abierto = value;
					this.SendPropertyChanged("id_curso_abierto");
					this.Onid_curso_abiertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_curso", DbType="Int NOT NULL")]
		public int id_curso
		{
			get
			{
				return this._id_curso;
			}
			set
			{
				if ((this._id_curso != value))
				{
					if (this._curso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cursoChanging(value);
					this.SendPropertyChanging();
					this._id_curso = value;
					this.SendPropertyChanged("id_curso");
					this.Onid_cursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_profesor", DbType="Int NOT NULL")]
		public int id_profesor
		{
			get
			{
				return this._id_profesor;
			}
			set
			{
				if ((this._id_profesor != value))
				{
					if (this._profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_profesorChanging(value);
					this.SendPropertyChanging();
					this._id_profesor = value;
					this.SendPropertyChanged("id_profesor");
					this.Onid_profesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora_inicio", DbType="Int NOT NULL")]
		public int hora_inicio
		{
			get
			{
				return this._hora_inicio;
			}
			set
			{
				if ((this._hora_inicio != value))
				{
					this.Onhora_inicioChanging(value);
					this.SendPropertyChanging();
					this._hora_inicio = value;
					this.SendPropertyChanged("hora_inicio");
					this.Onhora_inicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora_fin", DbType="Int NOT NULL")]
		public int hora_fin
		{
			get
			{
				return this._hora_fin;
			}
			set
			{
				if ((this._hora_fin != value))
				{
					this.Onhora_finChanging(value);
					this.SendPropertyChanging();
					this._hora_fin = value;
					this.SendPropertyChanged("hora_fin");
					this.Onhora_finChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dia", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string dia
		{
			get
			{
				return this._dia;
			}
			set
			{
				if ((this._dia != value))
				{
					this.OndiaChanging(value);
					this.SendPropertyChanging();
					this._dia = value;
					this.SendPropertyChanged("dia");
					this.OndiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_abierto_agendar_clase", Storage="_agendar_clase", ThisKey="id_curso_abierto", OtherKey="id_curso_abierto")]
		public EntitySet<agendar_clase> agendar_clase
		{
			get
			{
				return this._agendar_clase;
			}
			set
			{
				this._agendar_clase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_abierto_asistencia", Storage="_asistencia", ThisKey="id_curso_abierto", OtherKey="id_curso_abierto")]
		public EntitySet<asistencia> asistencia
		{
			get
			{
				return this._asistencia;
			}
			set
			{
				this._asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_abierto_matricula", Storage="_matricula", ThisKey="id_curso_abierto", OtherKey="id_curso_abierto")]
		public EntitySet<matricula> matricula
		{
			get
			{
				return this._matricula;
			}
			set
			{
				this._matricula.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_curso_abierto", Storage="_curso", ThisKey="id_curso", OtherKey="id_curso", IsForeignKey=true)]
		public curso curso
		{
			get
			{
				return this._curso.Entity;
			}
			set
			{
				curso previousValue = this._curso.Entity;
				if (((previousValue != value) 
							|| (this._curso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._curso.Entity = null;
						previousValue.curso_abierto.Remove(this);
					}
					this._curso.Entity = value;
					if ((value != null))
					{
						value.curso_abierto.Add(this);
						this._id_curso = value.id_curso;
					}
					else
					{
						this._id_curso = default(int);
					}
					this.SendPropertyChanged("curso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profesor_curso_abierto", Storage="_profesor", ThisKey="id_profesor", OtherKey="id_profesor", IsForeignKey=true)]
		public profesor profesor
		{
			get
			{
				return this._profesor.Entity;
			}
			set
			{
				profesor previousValue = this._profesor.Entity;
				if (((previousValue != value) 
							|| (this._profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._profesor.Entity = null;
						previousValue.curso_abierto.Remove(this);
					}
					this._profesor.Entity = value;
					if ((value != null))
					{
						value.curso_abierto.Add(this);
						this._id_profesor = value.id_profesor;
					}
					else
					{
						this._id_profesor = default(int);
					}
					this.SendPropertyChanged("profesor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_agendar_clase(agendar_clase entity)
		{
			this.SendPropertyChanging();
			entity.curso_abierto = this;
		}
		
		private void detach_agendar_clase(agendar_clase entity)
		{
			this.SendPropertyChanging();
			entity.curso_abierto = null;
		}
		
		private void attach_asistencia(asistencia entity)
		{
			this.SendPropertyChanging();
			entity.curso_abierto = this;
		}
		
		private void detach_asistencia(asistencia entity)
		{
			this.SendPropertyChanging();
			entity.curso_abierto = null;
		}
		
		private void attach_matricula(matricula entity)
		{
			this.SendPropertyChanging();
			entity.curso_abierto = this;
		}
		
		private void detach_matricula(matricula entity)
		{
			this.SendPropertyChanging();
			entity.curso_abierto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estudiante")]
	public partial class estudiante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_estudiante;
		
		private string _cedula;
		
		private string _nombre;
		
		private string _correo;
		
		private string _direccion;
		
		private int _telefono;
		
		private EntitySet<agendar_clase> _agendar_clase;
		
		private EntitySet<asistencia> _asistencia;
		
		private EntitySet<matricula> _matricula;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_estudianteChanging(int value);
    partial void Onid_estudianteChanged();
    partial void OncedulaChanging(string value);
    partial void OncedulaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(int value);
    partial void OntelefonoChanged();
    #endregion
		
		public estudiante()
		{
			this._agendar_clase = new EntitySet<agendar_clase>(new Action<agendar_clase>(this.attach_agendar_clase), new Action<agendar_clase>(this.detach_agendar_clase));
			this._asistencia = new EntitySet<asistencia>(new Action<asistencia>(this.attach_asistencia), new Action<asistencia>(this.detach_asistencia));
			this._matricula = new EntitySet<matricula>(new Action<matricula>(this.attach_matricula), new Action<matricula>(this.detach_matricula));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estudiante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_estudiante
		{
			get
			{
				return this._id_estudiante;
			}
			set
			{
				if ((this._id_estudiante != value))
				{
					this.Onid_estudianteChanging(value);
					this.SendPropertyChanging();
					this._id_estudiante = value;
					this.SendPropertyChanged("id_estudiante");
					this.Onid_estudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(55) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Int NOT NULL")]
		public int telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estudiante_agendar_clase", Storage="_agendar_clase", ThisKey="id_estudiante", OtherKey="id_estudiante")]
		public EntitySet<agendar_clase> agendar_clase
		{
			get
			{
				return this._agendar_clase;
			}
			set
			{
				this._agendar_clase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estudiante_asistencia", Storage="_asistencia", ThisKey="id_estudiante", OtherKey="id_estudiante")]
		public EntitySet<asistencia> asistencia
		{
			get
			{
				return this._asistencia;
			}
			set
			{
				this._asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estudiante_matricula", Storage="_matricula", ThisKey="id_estudiante", OtherKey="id_estudiante")]
		public EntitySet<matricula> matricula
		{
			get
			{
				return this._matricula;
			}
			set
			{
				this._matricula.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_agendar_clase(agendar_clase entity)
		{
			this.SendPropertyChanging();
			entity.estudiante = this;
		}
		
		private void detach_agendar_clase(agendar_clase entity)
		{
			this.SendPropertyChanging();
			entity.estudiante = null;
		}
		
		private void attach_asistencia(asistencia entity)
		{
			this.SendPropertyChanging();
			entity.estudiante = this;
		}
		
		private void detach_asistencia(asistencia entity)
		{
			this.SendPropertyChanging();
			entity.estudiante = null;
		}
		
		private void attach_matricula(matricula entity)
		{
			this.SendPropertyChanging();
			entity.estudiante = this;
		}
		
		private void detach_matricula(matricula entity)
		{
			this.SendPropertyChanging();
			entity.estudiante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.feriados")]
	public partial class feriados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_feriado;
		
		private System.DateTime _fecha;
		
		private string _motivo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_feriadoChanging(int value);
    partial void Onid_feriadoChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnmotivoChanging(string value);
    partial void OnmotivoChanged();
    #endregion
		
		public feriados()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_feriado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_feriado
		{
			get
			{
				return this._id_feriado;
			}
			set
			{
				if ((this._id_feriado != value))
				{
					this.Onid_feriadoChanging(value);
					this.SendPropertyChanging();
					this._id_feriado = value;
					this.SendPropertyChanged("id_feriado");
					this.Onid_feriadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string motivo
		{
			get
			{
				return this._motivo;
			}
			set
			{
				if ((this._motivo != value))
				{
					this.OnmotivoChanging(value);
					this.SendPropertyChanging();
					this._motivo = value;
					this.SendPropertyChanged("motivo");
					this.OnmotivoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.matricula")]
	public partial class matricula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_matricula;
		
		private int _id_estudiante;
		
		private int _id_curso_abierto;
		
		private int _costo;
		
		private string _estado;
		
		private EntitySet<pagos> _pagos;
		
		private EntityRef<curso_abierto> _curso_abierto;
		
		private EntityRef<estudiante> _estudiante;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_matriculaChanging(int value);
    partial void Onid_matriculaChanged();
    partial void Onid_estudianteChanging(int value);
    partial void Onid_estudianteChanged();
    partial void Onid_curso_abiertoChanging(int value);
    partial void Onid_curso_abiertoChanged();
    partial void OncostoChanging(int value);
    partial void OncostoChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public matricula()
		{
			this._pagos = new EntitySet<pagos>(new Action<pagos>(this.attach_pagos), new Action<pagos>(this.detach_pagos));
			this._curso_abierto = default(EntityRef<curso_abierto>);
			this._estudiante = default(EntityRef<estudiante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_matricula", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_matricula
		{
			get
			{
				return this._id_matricula;
			}
			set
			{
				if ((this._id_matricula != value))
				{
					this.Onid_matriculaChanging(value);
					this.SendPropertyChanging();
					this._id_matricula = value;
					this.SendPropertyChanged("id_matricula");
					this.Onid_matriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estudiante", DbType="Int NOT NULL")]
		public int id_estudiante
		{
			get
			{
				return this._id_estudiante;
			}
			set
			{
				if ((this._id_estudiante != value))
				{
					if (this._estudiante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estudianteChanging(value);
					this.SendPropertyChanging();
					this._id_estudiante = value;
					this.SendPropertyChanged("id_estudiante");
					this.Onid_estudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_curso_abierto", DbType="Int NOT NULL")]
		public int id_curso_abierto
		{
			get
			{
				return this._id_curso_abierto;
			}
			set
			{
				if ((this._id_curso_abierto != value))
				{
					if (this._curso_abierto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_curso_abiertoChanging(value);
					this.SendPropertyChanging();
					this._id_curso_abierto = value;
					this.SendPropertyChanged("id_curso_abierto");
					this.Onid_curso_abiertoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costo", DbType="Int NOT NULL")]
		public int costo
		{
			get
			{
				return this._costo;
			}
			set
			{
				if ((this._costo != value))
				{
					this.OncostoChanging(value);
					this.SendPropertyChanging();
					this._costo = value;
					this.SendPropertyChanged("costo");
					this.OncostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="matricula_pagos", Storage="_pagos", ThisKey="id_matricula", OtherKey="id_matricula")]
		public EntitySet<pagos> pagos
		{
			get
			{
				return this._pagos;
			}
			set
			{
				this._pagos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="curso_abierto_matricula", Storage="_curso_abierto", ThisKey="id_curso_abierto", OtherKey="id_curso_abierto", IsForeignKey=true)]
		public curso_abierto curso_abierto
		{
			get
			{
				return this._curso_abierto.Entity;
			}
			set
			{
				curso_abierto previousValue = this._curso_abierto.Entity;
				if (((previousValue != value) 
							|| (this._curso_abierto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._curso_abierto.Entity = null;
						previousValue.matricula.Remove(this);
					}
					this._curso_abierto.Entity = value;
					if ((value != null))
					{
						value.matricula.Add(this);
						this._id_curso_abierto = value.id_curso_abierto;
					}
					else
					{
						this._id_curso_abierto = default(int);
					}
					this.SendPropertyChanged("curso_abierto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estudiante_matricula", Storage="_estudiante", ThisKey="id_estudiante", OtherKey="id_estudiante", IsForeignKey=true)]
		public estudiante estudiante
		{
			get
			{
				return this._estudiante.Entity;
			}
			set
			{
				estudiante previousValue = this._estudiante.Entity;
				if (((previousValue != value) 
							|| (this._estudiante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estudiante.Entity = null;
						previousValue.matricula.Remove(this);
					}
					this._estudiante.Entity = value;
					if ((value != null))
					{
						value.matricula.Add(this);
						this._id_estudiante = value.id_estudiante;
					}
					else
					{
						this._id_estudiante = default(int);
					}
					this.SendPropertyChanged("estudiante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pagos(pagos entity)
		{
			this.SendPropertyChanging();
			entity.matricula = this;
		}
		
		private void detach_pagos(pagos entity)
		{
			this.SendPropertyChanging();
			entity.matricula = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pagos")]
	public partial class pagos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pago;
		
		private int _id_matricula;
		
		private int _monto;
		
		private int _monto_restante;
		
		private string _descripcion;
		
		private EntitySet<registro_pagos> _registro_pagos;
		
		private EntityRef<matricula> _matricula;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_pagoChanging(int value);
    partial void Onid_pagoChanged();
    partial void Onid_matriculaChanging(int value);
    partial void Onid_matriculaChanged();
    partial void OnmontoChanging(int value);
    partial void OnmontoChanged();
    partial void Onmonto_restanteChanging(int value);
    partial void Onmonto_restanteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public pagos()
		{
			this._registro_pagos = new EntitySet<registro_pagos>(new Action<registro_pagos>(this.attach_registro_pagos), new Action<registro_pagos>(this.detach_registro_pagos));
			this._matricula = default(EntityRef<matricula>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pago", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_pago
		{
			get
			{
				return this._id_pago;
			}
			set
			{
				if ((this._id_pago != value))
				{
					this.Onid_pagoChanging(value);
					this.SendPropertyChanging();
					this._id_pago = value;
					this.SendPropertyChanged("id_pago");
					this.Onid_pagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_matricula", DbType="Int NOT NULL")]
		public int id_matricula
		{
			get
			{
				return this._id_matricula;
			}
			set
			{
				if ((this._id_matricula != value))
				{
					if (this._matricula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_matriculaChanging(value);
					this.SendPropertyChanging();
					this._id_matricula = value;
					this.SendPropertyChanged("id_matricula");
					this.Onid_matriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monto", DbType="Int NOT NULL")]
		public int monto
		{
			get
			{
				return this._monto;
			}
			set
			{
				if ((this._monto != value))
				{
					this.OnmontoChanging(value);
					this.SendPropertyChanging();
					this._monto = value;
					this.SendPropertyChanged("monto");
					this.OnmontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monto_restante", DbType="Int NOT NULL")]
		public int monto_restante
		{
			get
			{
				return this._monto_restante;
			}
			set
			{
				if ((this._monto_restante != value))
				{
					this.Onmonto_restanteChanging(value);
					this.SendPropertyChanging();
					this._monto_restante = value;
					this.SendPropertyChanged("monto_restante");
					this.Onmonto_restanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pagos_registro_pagos", Storage="_registro_pagos", ThisKey="id_pago", OtherKey="id_pago")]
		public EntitySet<registro_pagos> registro_pagos
		{
			get
			{
				return this._registro_pagos;
			}
			set
			{
				this._registro_pagos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="matricula_pagos", Storage="_matricula", ThisKey="id_matricula", OtherKey="id_matricula", IsForeignKey=true)]
		public matricula matricula
		{
			get
			{
				return this._matricula.Entity;
			}
			set
			{
				matricula previousValue = this._matricula.Entity;
				if (((previousValue != value) 
							|| (this._matricula.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._matricula.Entity = null;
						previousValue.pagos.Remove(this);
					}
					this._matricula.Entity = value;
					if ((value != null))
					{
						value.pagos.Add(this);
						this._id_matricula = value.id_matricula;
					}
					else
					{
						this._id_matricula = default(int);
					}
					this.SendPropertyChanged("matricula");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registro_pagos(registro_pagos entity)
		{
			this.SendPropertyChanging();
			entity.pagos = this;
		}
		
		private void detach_registro_pagos(registro_pagos entity)
		{
			this.SendPropertyChanging();
			entity.pagos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profesor")]
	public partial class profesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_profesor;
		
		private string _cedula;
		
		private string _nombre;
		
		private string _correo;
		
		private string _direccion;
		
		private int _telefono;
		
		private int _sueldo;
		
		private string _idioma;
		
		private EntitySet<agendar_clase> _agendar_clase;
		
		private EntitySet<curso_abierto> _curso_abierto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_profesorChanging(int value);
    partial void Onid_profesorChanged();
    partial void OncedulaChanging(string value);
    partial void OncedulaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(int value);
    partial void OntelefonoChanged();
    partial void OnsueldoChanging(int value);
    partial void OnsueldoChanged();
    partial void OnidiomaChanging(string value);
    partial void OnidiomaChanged();
    #endregion
		
		public profesor()
		{
			this._agendar_clase = new EntitySet<agendar_clase>(new Action<agendar_clase>(this.attach_agendar_clase), new Action<agendar_clase>(this.detach_agendar_clase));
			this._curso_abierto = new EntitySet<curso_abierto>(new Action<curso_abierto>(this.attach_curso_abierto), new Action<curso_abierto>(this.detach_curso_abierto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_profesor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_profesor
		{
			get
			{
				return this._id_profesor;
			}
			set
			{
				if ((this._id_profesor != value))
				{
					this.Onid_profesorChanging(value);
					this.SendPropertyChanging();
					this._id_profesor = value;
					this.SendPropertyChanged("id_profesor");
					this.Onid_profesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cedula", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Int NOT NULL")]
		public int telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sueldo", DbType="Int NOT NULL")]
		public int sueldo
		{
			get
			{
				return this._sueldo;
			}
			set
			{
				if ((this._sueldo != value))
				{
					this.OnsueldoChanging(value);
					this.SendPropertyChanging();
					this._sueldo = value;
					this.SendPropertyChanged("sueldo");
					this.OnsueldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idioma", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string idioma
		{
			get
			{
				return this._idioma;
			}
			set
			{
				if ((this._idioma != value))
				{
					this.OnidiomaChanging(value);
					this.SendPropertyChanging();
					this._idioma = value;
					this.SendPropertyChanged("idioma");
					this.OnidiomaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profesor_agendar_clase", Storage="_agendar_clase", ThisKey="id_profesor", OtherKey="id_profesor")]
		public EntitySet<agendar_clase> agendar_clase
		{
			get
			{
				return this._agendar_clase;
			}
			set
			{
				this._agendar_clase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profesor_curso_abierto", Storage="_curso_abierto", ThisKey="id_profesor", OtherKey="id_profesor")]
		public EntitySet<curso_abierto> curso_abierto
		{
			get
			{
				return this._curso_abierto;
			}
			set
			{
				this._curso_abierto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_agendar_clase(agendar_clase entity)
		{
			this.SendPropertyChanging();
			entity.profesor = this;
		}
		
		private void detach_agendar_clase(agendar_clase entity)
		{
			this.SendPropertyChanging();
			entity.profesor = null;
		}
		
		private void attach_curso_abierto(curso_abierto entity)
		{
			this.SendPropertyChanging();
			entity.profesor = this;
		}
		
		private void detach_curso_abierto(curso_abierto entity)
		{
			this.SendPropertyChanging();
			entity.profesor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.programa")]
	public partial class programa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_programa;
		
		private string _nombre;
		
		private string _descripcion;
		
		private EntitySet<administrativo> _administrativo;
		
		private EntitySet<aulas> _aulas;
		
		private EntitySet<curso> _curso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_programaChanging(int value);
    partial void Onid_programaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public programa()
		{
			this._administrativo = new EntitySet<administrativo>(new Action<administrativo>(this.attach_administrativo), new Action<administrativo>(this.detach_administrativo));
			this._aulas = new EntitySet<aulas>(new Action<aulas>(this.attach_aulas), new Action<aulas>(this.detach_aulas));
			this._curso = new EntitySet<curso>(new Action<curso>(this.attach_curso), new Action<curso>(this.detach_curso));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_programa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_programa
		{
			get
			{
				return this._id_programa;
			}
			set
			{
				if ((this._id_programa != value))
				{
					this.Onid_programaChanging(value);
					this.SendPropertyChanging();
					this._id_programa = value;
					this.SendPropertyChanged("id_programa");
					this.Onid_programaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="programa_administrativo", Storage="_administrativo", ThisKey="id_programa", OtherKey="id_programa")]
		public EntitySet<administrativo> administrativo
		{
			get
			{
				return this._administrativo;
			}
			set
			{
				this._administrativo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="programa_aulas", Storage="_aulas", ThisKey="id_programa", OtherKey="id_programa")]
		public EntitySet<aulas> aulas
		{
			get
			{
				return this._aulas;
			}
			set
			{
				this._aulas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="programa_curso", Storage="_curso", ThisKey="id_programa", OtherKey="id_programa")]
		public EntitySet<curso> curso
		{
			get
			{
				return this._curso;
			}
			set
			{
				this._curso.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_administrativo(administrativo entity)
		{
			this.SendPropertyChanging();
			entity.programa = this;
		}
		
		private void detach_administrativo(administrativo entity)
		{
			this.SendPropertyChanging();
			entity.programa = null;
		}
		
		private void attach_aulas(aulas entity)
		{
			this.SendPropertyChanging();
			entity.programa = this;
		}
		
		private void detach_aulas(aulas entity)
		{
			this.SendPropertyChanging();
			entity.programa = null;
		}
		
		private void attach_curso(curso entity)
		{
			this.SendPropertyChanging();
			entity.programa = this;
		}
		
		private void detach_curso(curso entity)
		{
			this.SendPropertyChanging();
			entity.programa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registro_pagos")]
	public partial class registro_pagos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_registro;
		
		private int _id_pago;
		
		private System.DateTime _fecha_pago;
		
		private string _medio_pago;
		
		private int _cantidad;
		
		private EntityRef<pagos> _pagos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_registroChanging(int value);
    partial void Onid_registroChanged();
    partial void Onid_pagoChanging(int value);
    partial void Onid_pagoChanged();
    partial void Onfecha_pagoChanging(System.DateTime value);
    partial void Onfecha_pagoChanged();
    partial void Onmedio_pagoChanging(string value);
    partial void Onmedio_pagoChanged();
    partial void OncantidadChanging(int value);
    partial void OncantidadChanged();
    #endregion
		
		public registro_pagos()
		{
			this._pagos = default(EntityRef<pagos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_registro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_registro
		{
			get
			{
				return this._id_registro;
			}
			set
			{
				if ((this._id_registro != value))
				{
					this.Onid_registroChanging(value);
					this.SendPropertyChanging();
					this._id_registro = value;
					this.SendPropertyChanged("id_registro");
					this.Onid_registroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pago", DbType="Int NOT NULL")]
		public int id_pago
		{
			get
			{
				return this._id_pago;
			}
			set
			{
				if ((this._id_pago != value))
				{
					if (this._pagos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pagoChanging(value);
					this.SendPropertyChanging();
					this._id_pago = value;
					this.SendPropertyChanged("id_pago");
					this.Onid_pagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_pago", DbType="Date NOT NULL")]
		public System.DateTime fecha_pago
		{
			get
			{
				return this._fecha_pago;
			}
			set
			{
				if ((this._fecha_pago != value))
				{
					this.Onfecha_pagoChanging(value);
					this.SendPropertyChanging();
					this._fecha_pago = value;
					this.SendPropertyChanged("fecha_pago");
					this.Onfecha_pagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medio_pago", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string medio_pago
		{
			get
			{
				return this._medio_pago;
			}
			set
			{
				if ((this._medio_pago != value))
				{
					this.Onmedio_pagoChanging(value);
					this.SendPropertyChanging();
					this._medio_pago = value;
					this.SendPropertyChanged("medio_pago");
					this.Onmedio_pagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Int NOT NULL")]
		public int cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pagos_registro_pagos", Storage="_pagos", ThisKey="id_pago", OtherKey="id_pago", IsForeignKey=true)]
		public pagos pagos
		{
			get
			{
				return this._pagos.Entity;
			}
			set
			{
				pagos previousValue = this._pagos.Entity;
				if (((previousValue != value) 
							|| (this._pagos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pagos.Entity = null;
						previousValue.registro_pagos.Remove(this);
					}
					this._pagos.Entity = value;
					if ((value != null))
					{
						value.registro_pagos.Add(this);
						this._id_pago = value.id_pago;
					}
					else
					{
						this._id_pago = default(int);
					}
					this.SendPropertyChanged("pagos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_user;
		
		private string _nombre_user;
		
		private string _contrasennia;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onnombre_userChanging(string value);
    partial void Onnombre_userChanged();
    partial void OncontrasenniaChanging(string value);
    partial void OncontrasenniaChanged();
    #endregion
		
		public usuario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_user", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre_user
		{
			get
			{
				return this._nombre_user;
			}
			set
			{
				if ((this._nombre_user != value))
				{
					this.Onnombre_userChanging(value);
					this.SendPropertyChanging();
					this._nombre_user = value;
					this.SendPropertyChanged("nombre_user");
					this.Onnombre_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasennia", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string contrasennia
		{
			get
			{
				return this._contrasennia;
			}
			set
			{
				if ((this._contrasennia != value))
				{
					this.OncontrasenniaChanging(value);
					this.SendPropertyChanging();
					this._contrasennia = value;
					this.SendPropertyChanged("contrasennia");
					this.OncontrasenniaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
